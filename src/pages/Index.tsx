
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { CodeBlock } from "@/components/CodeBlock";
import { FeatureCard } from "@/components/FeatureCard";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";

const Index = () => {
  return (
    <div className="min-h-screen flex flex-col bg-gradient-to-b from-[#F2FCE2] to-[#E5DEFF]">
      <Header />
      
      <main className="flex-grow container mx-auto px-4 py-8">
        <section className="text-center my-16 max-w-4xl mx-auto">
          <h1 className="text-5xl font-bold mb-6 text-[#1A1F2C]">Python: –ú–æ—â—å –∏ –ü—Ä–æ—Å—Ç–æ—Ç–∞</h1>
          <p className="text-xl text-gray-700 mb-8">
            –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö, 
            –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.
          </p>
          <div className="flex flex-wrap justify-center gap-4">
            <Button className="bg-[#9b87f5] hover:bg-[#7E69AB] text-white">–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</Button>
            <Button variant="outline" className="border-[#9b87f5] text-[#7E69AB]">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</Button>
          </div>
        </section>

        <section className="my-16">
          <h2 className="text-3xl font-bold text-center mb-10 text-[#1A1F2C]">–ü–æ—á–µ–º—É Python?</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <FeatureCard 
              icon="üìä" 
              title="–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö" 
              description="Python ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ NumPy, Pandas –∏ Matplotlib." 
            />
            <FeatureCard 
              icon="ü§ñ" 
              title="–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ" 
              description="TensorFlow, PyTorch –∏ scikit-learn –¥–µ–ª–∞—é—Ç Python –∏–¥–µ–∞–ª—å–Ω—ã–º –¥–ª—è –ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è." 
            />
            <FeatureCard 
              icon="üåê" 
              title="–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" 
              description="Django –∏ Flask ‚Äî –º–æ—â–Ω—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏." 
            />
          </div>
        </section>

        <section className="my-16">
          <h2 className="text-3xl font-bold text-center mb-10 text-[#1A1F2C]">–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞</h2>
          
          <Tabs defaultValue="webdev" className="max-w-3xl mx-auto">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="webdev">–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</TabsTrigger>
              <TabsTrigger value="data">–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</TabsTrigger>
              <TabsTrigger value="ml">–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</TabsTrigger>
            </TabsList>
            <TabsContent value="webdev">
              <Card>
                <CardHeader>
                  <CardTitle>Flask: –ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä</CardTitle>
                  <CardDescription>–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ Flask</CardDescription>
                </CardHeader>
                <CardContent>
                  <CodeBlock code={`from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello_world():
    return '–ü—Ä–∏–≤–µ—Ç, –ú–∏—Ä!'

if __name__ == '__main__':
    app.run(debug=True)`} />
                </CardContent>
                <CardFooter>
                  <Button variant="outline" className="w-full">–ò–∑—É—á–∏—Ç—å Flask</Button>
                </CardFooter>
              </Card>
            </TabsContent>
            <TabsContent value="data">
              <Card>
                <CardHeader>
                  <CardTitle>Pandas: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</CardTitle>
                  <CardDescription>–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å Pandas</CardDescription>
                </CardHeader>
                <CardContent>
                  <CodeBlock code={`import pandas as pd
import matplotlib.pyplot as plt

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv('data.csv')

# –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print(df.describe())

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
df.plot(kind='bar')
plt.show()`} />
                </CardContent>
                <CardFooter>
                  <Button variant="outline" className="w-full">–ò–∑—É—á–∏—Ç—å Pandas</Button>
                </CardFooter>
              </Card>
            </TabsContent>
            <TabsContent value="ml">
              <Card>
                <CardHeader>
                  <CardTitle>Scikit-learn: –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</CardTitle>
                  <CardDescription>–ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–µ–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏</CardDescription>
                </CardHeader>
                <CardContent>
                  <CodeBlock code={`from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
model = RandomForestClassifier()
model.fit(X_train, y_train)

# –û—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–∏
predictions = model.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
print(f"–¢–æ—á–Ω–æ—Å—Ç—å: {accuracy:.2f}")`} />
                </CardContent>
                <CardFooter>
                  <Button variant="outline" className="w-full">–ò–∑—É—á–∏—Ç—å Scikit-learn</Button>
                </CardFooter>
              </Card>
            </TabsContent>
          </Tabs>
        </section>
      </main>
      
      <Footer />
    </div>
  );
};

export default Index;
